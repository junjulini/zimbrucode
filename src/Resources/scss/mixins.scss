
/*
 * This file is part of the zimbrucode package.
 *
 * (c) Junjulini
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

@import '@zc/icons-list.scss';
@import '@zc/variables.scss';

// Word-break
@mixin word-break {
    word-break: break-all;
    word-break: break-word; // Non standard for webkit
    hyphens: auto;
}

// Linear-gradient
@mixin linear-gradient($direction : to bottom, $startColor : #000000, $endColor : #EEEEEE) {
    background : $startColor;
    background : linear-gradient($direction, $startColor, $endColor);
}

// Gradient
@mixin gradient($startColor : #EEEEEE, $endColor : #FFFFFF) {
    @include linear-gradient(to bottom, $startColor, $endColor);
}

// Horizontal-gradient
@mixin horizontal-gradient($startColor : #EEEEEE, $endColor : #FFFFFF) {
    @include linear-gradient(to left, $startColor, $endColor);
}

// Radial-gradient
@mixin radial-gradient($hvPosition : center center, $shapeSize : circle cover, $startColor : #FFFFFF, $endColor : #000000) {
    background : $startColor;
    background : radial-gradient($hvPosition, $shapeSize, $startColor, $endColor)
}

// Default transition
@mixin def-transition($property) {
    transition: $property $transition-duration;
}

// Skew
@mixin skew($x : 35deg, $y : 0deg) {
    transform : skew($x, $y);
}

@mixin skewX($x : 35deg) {
    transform: skewX($x);
}

@mixin skewY($y : 35deg) {
    transform: skewY($y);
}

// Scale
@mixin scale($scale : 1) {
    transform: scale($scale);
}

@mixin scaleX($scale : 1) {
    transform: scaleX($scale);
}

@mixin scaleY($scale : 1) {
    transform: scaleY($scale);
}

// Rotate
@mixin rotate($angle : 35deg) {
    transform: rotate($angle); 
}

// Rotate 3D
@mixin rotate3d($deg1 : 35deg, $deg2 : 35deg, $deg3 : 35deg) {
    transform: rotateX($deg1) rotateY($deg2) rotateZ($deg3);
    transform-style: preserve-3d;
}

// Translate
@mixin translate($x : 10px, $y : 10px) {
    transform: translate($x, $y);
}

// Translate X
@mixin translateX($x : 10px) {
    transform: translateX($x);
}

// Translate Y
@mixin translateY($y : 10px) {
    transform: translateY($y);
}

// Translate Z
@mixin translateZ($y : 10px) {
    transform: translateZ($y);
}

// Translate 3D
@mixin translate3d($x : 0, $y : 0, $z : 0) {
    transform: translate3d($x, $y, $z);
}

// 3D Transform
@mixin transform3D($z : 300, $deg : 180deg) {
    perspective: $z;
    transform: rotateY($deg);
    transform-style: preserve-3d;
}

// Columns
@mixin columns($nb : 4, $width: 100px, $gap : 10px) {
    column-count: $nb;
    column-width: $width;
    column-gap: $gap;
}

// Placeholder color
@mixin placeholder-color($color : '') {
    @if $color {
        &::placeholder {
            color: $color !important;
        }
    }
}

// Center horizontal
@mixin center-h {
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
}

// Center content
@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Center display table
@mixin center-table {
    display: table;
    margin-left: auto;
    margin-right: auto;
}

// Center absolute
@mixin center-abs {
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
}

// Center display flex
@mixin center-flex {
    display: flex;
    align-items: center;
    justify-content: center;
}

// Truncate String with Ellipsis
@mixin truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

// Set font icon
@mixin icon($icon) {
    font-family: 'Material Icons' !important;
    font-weight: normal;
    font-style: normal;
    display: inline-block;
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    font-feature-settings: 'liga';
    @include icon-content($icon);
}

// Set cont icon : only content
@mixin icon-content($icon) {
    content : map-get($icons-list, $icon);
}