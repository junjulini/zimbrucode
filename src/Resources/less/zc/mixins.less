
/*
 * This file is part of the ZimbruCode package.
 *
 * (c) Junjulini
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

@import 'zc/icons-list.less';
@import 'zc/variables.less';

// Word-break
.word-break() {
    word-break: break-all;
    word-break: break-word; // Non standard for webkit
    hyphens: auto;
}

// Border-image - webkit is the last , because unprefixed syntax is buggy
.border-image(@topOffset : 10, @rightOffset : 10, @bottomOffset : 10, @leftOffset : 10, @image : ~"border-image.png", @method : repeat) {
    border-image: url(@{img_path}@{image}) @topOffset @rightOffset @bottomOffset @leftOffset @method;
    border-width: ~"@{topOffset}px" ~"@{rightOffset}px" ~"@{bottomOffset}px" ~"@{leftOffset}px";
}

// Background-rgba
.background-rgba(@color : #ffffff, @opacity : 60) {
    background-color : transparent;
    background-color : fade(@arguments);
}

// Gradient
.gradient(@startColor : #eee, @endColor : white) {
    .linear-gradient(to bottom, @startColor, @endColor);
}

// Horizontal-gradient
.horizontal-gradient(@startColor : #eee, @endColor : white) {
    .linear-gradient(to left, @startColor, @endColor);
}

// Linear-gradient
.linear-gradient(@direction : to bottom, @startColor : #000, @endColor : #EEE) {
    background : @startColor;
    background : linear-gradient(@direction, @startColor, @endColor);
}

// Radial-gradient
.radial-gradient(@hvPosition : center center, @shapeSize : circle cover, @startColor : #ffffff, @endColor : #000000) {
    background : @startColor;
    background : radial-gradient(@hvPosition, @shapeSize, @startColor, @endColor)
}

// Default transition
.def-transition(@property) {
    transition: @property @transition-duration;
}

// Skew
.skew(@x : 35deg, @y : 0deg) {
    transform : skew(@x, @y);
}

.skewX(@x : 35deg) {
    transform: skewX(@arguments);
}

.skewY(@y : 35deg) {
    transform: skewY(@arguments);
}

// Scale
.scale(@scale : 1) {
    transform: scale(@arguments);
}

.scaleX(@scale : 1) {
    transform: scaleX(@arguments);
}

.scaleY(@scale : 1) {
    transform: scaleY(@arguments);
}

// Rotate
.rotate(@angle : 35deg) {
    transform: rotate(@arguments); 
}

// Rotate 3D
.rotate3d(@deg1 : 35deg, @deg2 : 35deg, @deg3 : 35deg) {
    transform: rotateX(@deg1) rotateY(@deg2) rotateZ(@deg3);
    transform-style: preserve-3d;
}

// Translate
.translate(@x : 10px, @y : 10px) {
    transform: translate(@x, @y);
}

// Translate X
.translateX(@x : 10px) {
    transform: translateX(@x);
}

// Translate Y
.translateY(@y : 10px) {
    transform: translateY(@y);
}

// Translate Z
.translateZ(@y : 10px) {
    transform: translateZ(@y);
}

// Translate 3D
.translate3d(@x : 0, @y : 0, @z : 0) {
    transform: translate3d(@x, @y, @z);
}

// 3D Transform
.transform3D(@z : 300, @deg : 180deg) {
    perspective: @z;
    transform: rotateY(@deg);
    transform-style: preserve-3d;
}

// Columns
.columns(@nb : 4, @width: 100px, @gap : 10px) {
    -webkit-column-count : @nb;  -webkit-column-width : @width; -webkit-column-gap : @gap;
       -moz-column-count : @nb;     -moz-column-width : @width;    -moz-column-gap : @gap;
         -o-column-count : @nb;       -o-column-width : @width;      -o-column-gap : @gap;
        -ms-column-count : @nb;      -ms-column-width : @width;     -ms-column-gap : @gap;
            column-count : @nb;          column-width : @width;         column-gap : @gap;
}

// @easing list @see : http://matthewlein.com/ceaser/

// Cubic
@easeInCubic     :  cubic-bezier(0.550, 0.055, 0.675, 0.190);
@easeOutCubic    :  cubic-bezier(0.215, 0.610, 0.355, 1.000);
@easeInOutCubic  :  cubic-bezier(0.645, 0.045, 0.355, 1.000);

// Circ
@easeInCirc      :  cubic-bezier(0.600, 0.040, 0.980, 0.335);
@easeOutCirc     :  cubic-bezier(0.075, 0.820, 0.165, 1.000);
@easeInOutCirc   :  cubic-bezier(0.785, 0.135, 0.150, 0.860);

// Expo
@easeInExpo      :  cubic-bezier(0.950, 0.050, 0.795, 0.035);
@easeOutExpo     :  cubic-bezier(0.190, 1.000, 0.220, 1.000);
@easeInOutExpo   :  cubic-bezier(1.000, 0.000, 0.000, 1.000);

// Quad
@easeInQuad      :  cubic-bezier(0.550, 0.085, 0.680, 0.530);
@easeOutQuad     :  cubic-bezier(0.250, 0.460, 0.450, 0.940);
@easeInOutQuad   :  cubic-bezier(0.455, 0.030, 0.515, 0.955);

// Quart
@easeInQuart     :  cubic-bezier(0.895, 0.030, 0.685, 0.220);
@easeOutQuart    :  cubic-bezier(0.165, 0.840, 0.440, 1.000);
@easeInOutQuart  :  cubic-bezier(0.770, 0.000, 0.175, 1.000);

// Quint
@easeInQuint     :  cubic-bezier(0.755, 0.050, 0.855, 0.060);
@easeOutQuint    :  cubic-bezier(0.230, 1.000, 0.320, 1.000);
@easeInOutQuint  :  cubic-bezier(0.860, 0.000, 0.070, 1.000);

// Sine
@easeInSine      :  cubic-bezier(0.470, 0.000, 0.745, 0.715);
@easeOutSine     :  cubic-bezier(0.390, 0.575, 0.565, 1.000);
@easeInOutSine   :  cubic-bezier(0.445, 0.050, 0.550, 0.950);

// Back
@easeInBack      :  cubic-bezier(0.600, -0.280, 0.735, 0.045);
@easeOutBack     :  cubic-bezier(0.175,  0.885, 0.320, 1.275);
@easeInOutBack   :  cubic-bezier(0.680, -0.550, 0.265, 1.550);

// Filtres
.filter-blur(@value : 2px) {
    filter          : blur(@value);
    -webkit-filter  : blur(@value);
}

.filter-contrast(@value : 150%) {
    filter          : contrast(@value);
    -webkit-filter  : contrast(@value);
}

.filter-grayscale(@value : 100%) {
    filter          : grayscale(@value);
    -webkit-filter  : grayscale(@value);
}

.filter-sepia(@value : 100%) {
    filter          : sepia(@value);
    -webkit-filter  : sepia(@value);
}

// Google font import function
.font-import(@font : '', @argument : '', @is_default : false) when not (@font = 'null') {
    @url_font : font-import(@font, @argument);
    @import (css) url(@url_font);
}

// Button 3D
.button-3D(@color : #60B842, @font : arial, @br : 5px, @fs : 14px, @fc : #FFF) when not (@color = '') {
    border-radius: @br @br @br @br;
    box-shadow: 0 2px 0 0 darken(@color, 10);
    .linear-gradient(bottom, @color 0%, saturate(spin(@color, -15), 20) 85%);
    border: none;
    outline: none;
    color: @fc;
    font-family: @font, helvetica, sans-serif;
    font-size: @fs;
    text-shadow: 1px 1px 1px darken( @color, 10 );
    padding: 10px;
    padding-left: 15px;
    padding-right: 15px;

    &:hover {
        .linear-gradient(bottom, @color 0%, saturate(spin(lighten(@color, 4), -15), 20) 85%);
        box-shadow: 0 2px 0 0 darken(@color, 10);
    }

    &:active {
        .linear-gradient(bottom, @color 0%, saturate(spin(lighten(@color, 4), -15), 20) 85%);
        box-shadow: 0 1px 0 0 darken(@color, 10);
        position: relative;
        top: 1px;
    }
}

/**
 * Button 3D Flat
 * @param  {String}  @color : #60B842 background color of button
 * @param  {String}  @font  : arial   font family
 * @param  {Integer} @fw    : 400     font weight
 * @param  {String}  @fs    : 14px    font size
 * @param  {String}  @br    : 3px     button border radius
 * @param  {String}  @fc    : #FFF    text color of button
 */
.button-3D-flat(@color : #60B842, @font : arial, @fw : 400, @fs : 14px, @br : 3px, @fc : #FFF) when not (@color = '') {
    border-radius: @br;
    box-shadow: 0 2px 0 0 saturate(darken(@color, 20), -20);
    border: none;
    outline: none;
    background: @color;
    color: @fc;
    font-family: @font, helvetica, sans-serif;
    font-size: @fs;
    font-weight: @fw;
    padding: 10px;
    padding-left: 15px;
    padding-right: 15px;

    &:hover {
        box-shadow: 0 2px 0 0 saturate(darken(@color, 20), -20);
        background: @color;
    }

    &:active {
        box-shadow: 0 1px 0 0 saturate(darken(@color, 20), -20);
        background: @color;
        position: relative;
        top: 1px;
    }
}

// Placeholder color
.placeholder-color(@color : '') when not (@color = '') {
    // WebKit browsers
    &::-webkit-input-placeholder {
        color: @color;
    }

    // Mozilla Firefox 19+
    &::-moz-placeholder {
        color: @color;
    }

    // Internet Explorer 10+
    &:-ms-input-placeholder {
        color: @color;
    }
}

// Appearance
.appearance(@type : textfield) {
       -moz-appearance : @type;
    -webkit-appearance : @type;
            appearance : @type;
}

// Center horizontal
.center-h() {
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
}

// Center content
.center-block() {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Center display table
.center-table() {
    display: table;
    margin-left: auto;
    margin-right: auto;
}

// Center absolute
.center-abs() {
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
}

// Center display flex
.center-flex() {
    display: flex;
    align-items: center;
    justify-content: center;
}

// User select
.user-select(@type : none) {
    -webkit-user-select : @type;
            user-select : @type;
}

// Grab cursor
.grab-cursor(@grabbing : false) when (@grabbing = false) {
    cursor: -webkit-grab;
    cursor: -moz-grab;
    cursor: grab;
}
.grab-cursor(@grabbing : false) when (@grabbing = true) {
    cursor: -webkit-grabbing;
    cursor: -moz-grabbing;
    cursor: grabbing;
}

// Truncate String with Ellipsis
.truncate() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

// Set font icon
.icon(@name) {
    font-family: 'Material Icons' !important;
    font-weight: normal;
    font-style: normal;
    display: inline-block;
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    font-feature-settings: 'liga';
    .icon-content(@name);
}

// Set cont icon : only content
.icon-content(@name) {
    content : @@name;
}

// Detailed margin
.det-margin(@margin) {
    margin-top    : extract(@margin, 1);
    margin-right  : extract(@margin, 2);
    margin-bottom : extract(@margin, 3);
    margin-left   : extract(@margin, 4);
}

// Detailed padding
.det-padding(@padding) {
    padding-top    : extract(@margin, 1);
    padding-right  : extract(@margin, 2);
    padding-bottom : extract(@margin, 3);
    padding-left   : extract(@margin, 4);
}

// Detailed border radius
.det-border-radius(@br) {
    border-top-left-radius     : extract(@br, 1);
    border-top-right-radius    : extract(@br, 2);
    border-bottom-right-radius : extract(@br, 3);
    border-bottom-left-radius  : extract(@br, 4);
    background-clip: padding-box;
}